{"version":3,"sources":["components/MenuItem.js","components/BridgeSearch.js","components/Loader.js","components/BridgeMenu.js","bridges.js","components/LeafletMap.js","components/BridgeInfo.js","App.js","index.js"],"names":["components_MenuItem","props","react_default","a","createElement","className","title","bridge","name","onClick","nameEncoded","BridgeSearch","classes","makeStyles","theme","search","position","width","searchIcon","spacing","height","pointerEvents","display","alignItems","justifyContent","inputRoot","color","inputInput","padding","useStyles","Search_default","InputBase","onChange","selectBridge","placeholder","root","input","bridgeLoader","margin-top","bridgeMenu","text-align","Loader","CircularProgress","_default","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","loading","errored","bridges","filteredBridges","handleBridgeSearch","bind","assertThisInitialized","_this2","setState","fetch","then","response","ok","Error","statusText","json","forEach","toUpperCase","encode","error","catch","err","console","message","searchEvent","target","value","filter","includes","_this3","Fragment","length","map","key","id","React","Component","Tiles","TileLayer","url","attribution","OntarioMap","ontario","coords","zoom","Map","center","LeafletMap","lat","lng","Popup","InfoPanel","age","Date","getFullYear","year","BridgeInfo","infoPanel","components_LeafletMap","App","BridgeMenu_default","handleBridgeChange","components_BridgeInfo","ReactDOM","render","src_App_0","document","querySelector"],"mappings":"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","file":"static/js/main.b41353c4.chunk.js","sourcesContent":["import React from 'react';\nimport './MenuItem.css'\n\nexport default function(props) {\n    return (\n        <div\n            className=\"menu-item\"\n            title={props.bridge.name}\n            onClick={props.onClick}\n        >\n            {props.bridge.nameEncoded}\n        </div>\n    );\n}\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputBase from '@material-ui/core/InputBase';\nimport SearchIcon from '@material-ui/icons/Search';\n\n\nexport default function BridgeSearch(props) {\n    const useStyles = makeStyles(theme => ({\n        search: {\n            position: 'relative',\n            width: '100%',\n        },\n        searchIcon: {\n            width: theme.spacing(4),\n            height: '100%',\n            position: 'absolute',\n            pointerEvents: 'none',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n        },\n        inputRoot: {\n            color: 'inherit',\n        },\n        inputInput: {\n            padding: theme.spacing(1, 1, 1, 4),\n            width: '100%',\n        }\n    }));\n    const classes = useStyles();\n\n    return (\n        <div className={classes.search}>\n            <div className={classes.searchIcon}>\n                <SearchIcon />\n            </div>\n            <InputBase\n                onChange={props.selectBridge}\n                placeholder=\"Name a bridge...\"\n                classes={{\n                    root: classes.inputRoot,\n                    input: classes.inputInput,\n                }}\n            />\n        </div>\n    );\n}\n\n","import {makeStyles} from '@material-ui/core'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport React from 'react'\n\n// TODO: Material-UI explanation\nconst useStyles = makeStyles(theme => ({\n    bridgeLoader: {\n        'position': 'relative',\n        'margin-top': '50%'\n    },\n    bridgeMenu: {\n        'text-align': 'center',\n    }\n}));\n\nexport default function() {\n    const classes = useStyles();\n    return (\n        <div className={classes.bridgeMenu}>\n            <CircularProgress className={classes.bridgeLoader} />\n        </div>\n    );\n}\n","import React from 'react'\nimport MenuItem from './MenuItem.js'\nimport getBridgeData from '../bridges.js'\nimport BridgeSearch from './BridgeSearch.js'\nimport Loader from './Loader'\n\nexport default class extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: false,\n            errored: false,\n            bridges: [],\n            filteredBridges: []\n        };\n        this.handleBridgeSearch = this.handleBridgeSearch.bind(this);\n    }\n\n    componentDidMount() {\n        // We're about to start loading our data, set this in our state.\n        this.setState({ loading: true });\n\n        // Use our bridge.js function to talk to the REST API.\n        getBridgeData()\n            .then(bridges => this.setState({ loading: false, bridges, filteredBridges: bridges, error: '' }))\n            .catch(err => {\n                console.error('Unable to load bridge data', err.message);\n                this.setState({ errored: true, message: err.message });\n            });\n    }\n\n    handleBridgeSearch (searchEvent) {\n        // If nothing is entered return complete list\n        if (!searchEvent.target.value) return this.setState({filteredBridges: this.state.bridges});\n\n        // Otherwise, grab search value in upperCase...\n        let search = searchEvent.target.value.toUpperCase();\n\n        // ...and filter bridges out by updating state with the return value of .include method, regex alternative of which: new RegExp(/+search+/)\n        return this.setState({\n            filteredBridges: this.state.bridges\n                .filter(bridge => bridge.name.includes(search))\n        });\n    }\n\n    render() {\n        // Are we in an error state? If so show an error message.\n        if (this.state.errored) return 'Unable to load bridge data';\n\n        // If we aren't in error state, are we in a loading state?\n        if (this.state.loading) return <Loader />;\n\n        // Show our search bar, bridge listing, with 1 MenuItem per bridge\n        return (\n            <React.Fragment>\n                <BridgeSearch selectBridge={this.handleBridgeSearch} />\n                {\n                    this.state.filteredBridges.length ?\n                        this.state.filteredBridges.map(bridge =>\n                            <MenuItem\n                                key={bridge.id}\n                                bridge={bridge}\n                                onClick={() => this.props.onChange(bridge)}\n                            />\n                            ) : 'Not found!'\n                }\n            </React.Fragment>\n        )\n    };\n}\n","// Convert characters like ' to HTML entities using\n// https://github.com/mathiasbynens/he#heencodetext-options\nimport { encode } from 'he';\n\nconst bridgeUrl = 'https://api.myjson.com/bins/17fpo0';\n\nexport default function() {\n  return fetch(bridgeUrl)\n    .then(response => {\n      // If we don't get a 200 OK response, throw an error to the .catch()\n      if (!response.ok) {\n        throw new Error(response.statusText);\n      }\n\n      // Parse the response body from JSON to JS (an Array) \n      return response.json();\n    })\n    .then(bridges => {\n      // Encode and normalize (uppercase) all bridge names\n      bridges.forEach(bridge => {\n        // Bridge name in uppercase, not encoded\n        bridge.name = bridge.name.toUpperCase();\n        // Bridge name uppercase and encoded (suitable for HTML display)\n        bridge.nameEncoded = encode(bridge.name)\n      });\n\n      return bridges;\n    });\n    // NOTE: we aren't going to deal with errors here, caller must .catch()\n}\n","import React from 'react';\nimport { Map, Popup, TileLayer } from 'react-leaflet';\n\n// Import the CSS for Leaflet itself from node_modules/\nimport '../../node_modules/leaflet/dist/leaflet.css';\nimport './LeafletMap.css';\n\nfunction Tiles() {\n    return (\n        <TileLayer\n    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n    attribution=\"&copy; <a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\n        />\n);\n}\n\nfunction OntarioMap() {\n    // General location/zoom to see all of Ontario\n    const ontario = {\n        coords: [51.2538, -85.3232],\n        zoom: 5\n    };\n\n    return (\n        <Map className=\"full-height\" center={ontario.coords} zoom={ontario.zoom}>\n        <Tiles />\n        </Map>\n);\n}\n\n/**\n * Render a Leaflet Map. If we're given a bridge object via props,\n * use that, otherwise show a map of Ontario.\n */\nfunction LeafletMap(props) {\n    const bridge = props.bridge;\n\n    if(!bridge) {\n        return <OntarioMap />\n    }\n\n    const coords = [bridge.lat, bridge.lng];\n    // By default, zoom the map to this level\n    const defaultZoom = 14;\n\n    return (\n        <Map className=\"full-height\" center={coords} zoom={defaultZoom}>\n        <Tiles />\n        <Popup position={coords}>\n        {bridge.nameEncoded}\n        </Popup>\n        </Map>\n);\n}\n\nexport default LeafletMap;\n","import React from 'react';\nimport LeafletMap from './LeafletMap.js';\nimport './BridgeInfo.css';\n\nfunction InfoPanel(props) {\n    const bridge = props.bridge;\n    // Compute the age of the bridge in years\n    const age = (new Date()).getFullYear() - bridge.year;\n\n    return (\n        <div id=\"info-panel\">\n            <h2>{bridge.nameEncoded}</h2>\n\n            <div className=\"bridge-stats\">\n                <div>Year: {bridge.year} ({age} years)</div>\n                <div>Width: {bridge.width}m</div>\n                <div>Length: {bridge.length}m</div>\n            </div>\n        </div>\n    );\n}\n\n/**\n * We may or may not have a bridge passed to us via props.\n * If we do, render an info panel across the top.  If we don't\n * render nothing (null), allowing the initial map of Ontario\n * to take over the entire right-hand space.\n */\nfunction BridgeInfo(props) {\n    const infoPanel = props.bridge ? <InfoPanel bridge={props.bridge} /> : null;\n\n    return (\n        <div id=\"bridge-info-wrapper\">\n            {infoPanel}\n\n            <div id=\"leaflet-map\">\n                <LeafletMap bridge={props.bridge} />\n            </div>\n        </div>\n    );\n}\n\nexport default BridgeInfo;\n\n","import React from 'react';\n\nimport './App.css';\n\nimport BridgeMenu from './components/BridgeMenu.js';\nimport BridgeInfo from './components/BridgeInfo.js';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            bridge: null\n        };\n    }\n\n    handleBridgeChange(bridge) {\n        this.setState({ bridge });\n    }\n\n    render() {\n        return (\n            <div id=\"app\">\n                <nav id=\"menu\">\n                    <BridgeMenu\n                        onChange={this.handleBridgeChange.bind(this)}\n                    />\n                </nav>\n\n                <div id=\"bridge-info\">\n                    <BridgeInfo bridge={this.state.bridge} />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}